version: 2

jobs:
  "golang-1.14":
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - run: 'wget https://github.com/DataDog/zstd/files/2246767/mr.zip'
      - run: 'unzip mr.zip'
      - run: 'go build'
      - run: 'PAYLOAD=`pwd`/mr go test -v'
      - run: 'PAYLOAD=`pwd`/mr go test -bench .'
  "golang-1.15":
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout
      - run: 'wget https://github.com/DataDog/zstd/files/2246767/mr.zip'
      - run: 'unzip mr.zip'
      - run: 'go build'
      - run: 'PAYLOAD=`pwd`/mr go test -v'
      - run: 'PAYLOAD=`pwd`/mr go test -bench .'
  "golang-latest":
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run: 'wget https://github.com/DataDog/zstd/files/2246767/mr.zip'
      - run: 'unzip mr.zip'
      - run: 'go build'
      - run: 'PAYLOAD=`pwd`/mr go test -v'
      - run: 'PAYLOAD=`pwd`/mr go test -bench .'
  "golang-libzstd":
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run: 'sudo apt-get update && sudo apt-get install libzstd-dev'
      - run: 'wget https://github.com/DataDog/zstd/files/2246767/mr.zip'
      - run: 'unzip mr.zip'
      - run: 'go build -tags libzstd'
      - run: 'go test -tags libzstd -c && ldd zstd.test | grep libzstd'
      - run: 'PAYLOAD=`pwd`/mr go test -tags libzstd -v'
      - run: 'PAYLOAD=`pwd`/mr go test -tags libzstd -bench .'
  "golang-efence":
    resource_class: xlarge
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run: 'wget https://github.com/DataDog/zstd/files/2246767/mr.zip'
      - run: 'unzip mr.zip'
      - run: 'go build'
      - run: 'PAYLOAD=`pwd`/mr GODEBUG=efence=1 go test -v'
  "golang-zstd-legacy-support":
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run: 'wget https://github.com/DataDog/zstd/files/2246767/mr.zip'
      - run: 'unzip mr.zip'
      - run: 'CGO_CFLAGS="-DZSTD_LEGACY_SUPPORT=1" go build'
      - run: 'PAYLOAD=`pwd`/mr CGO_CFLAGS="-DZSTD_LEGACY_SUPPORT=1" go test -v'
  "golang-i386":
    docker:
      - image: 32bit/ubuntu:16.04
    steps:
      - checkout
      - run: 'linux32 --32bit i386 ./travis_test_32.sh'

workflows:
  version: 2
  build:
    jobs:
      - "golang-1.14"
      - "golang-1.15"
      - "golang-latest"
      - "golang-libzstd"
      - "golang-efence"
      - "golang-i386"
      - "golang-zstd-legacy-support"
